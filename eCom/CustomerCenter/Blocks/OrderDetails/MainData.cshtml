@inherits Dynamicweb.Rendering.RazorTemplateBase<Dynamicweb.Rendering.RazorTemplateModel<Dynamicweb.Rendering.Template>>
@using Dynamicweb.Rapido.Blocks.Components.General;
@using Dynamicweb.Rapido.Blocks.Components;
@using System.Linq
@using Dynamicweb.Ecommerce
@using Dynamicweb.Ecommerce.Orders
@using Dynamicweb.Ecommerce.Common
@using Dynamicweb.Rapido.Blocks
@using Dynamicweb.Rapido.Blocks.Components.General

@functions {
    BlocksPage mainDataPage = BlocksPage.GetBlockPage("Details");
    bool isSalesTaxWebsite = true; //Pageview.AreaSettings.GetItem("Ecommerce").GetBoolean("IsSalesTaxWebsite");
}

@{
    Block mainData = new Block
    {
        Id = "MainData",
        SortId = 30,
        Template = RenderData()
    };

    mainDataPage.Add("MainContent", mainData);
}

@helper RenderData()
{
    <table class="table table-responsive u-no-margin u-border-bottom">
        <thead>
            <tr>
                <th>&nbsp;</th>
                <th>@Translate("Product")</th>
                <th class="u-ta-right">@Translate("Qty")</th>
                <th class="u-ta-right">@Translate("Price")</th>
                <th class="u-ta-right">@Translate("Total")</th>
            </tr>
        </thead>
        <tbody>

            @foreach (LoopItem orderline in GetLoop("OrderLines").Where(o => o.GetInteger("Ecom:Order:OrderLine.Type") != (int)OrderLineType.Tax).ToList())
            {
                double pointsTotal = orderline.GetDouble("Ecom:Order:OrderLine.Points");

                <tr>
                    <td width="60">
                        @if (orderline.GetBoolean("Ecom:Order:OrderLine.IsProduct"))
                        {
                            @Render(new Image {
                                Path = GetProductImage(orderline),
                                Title = orderline.GetString("Ecom:Order:OrderLine.ProductName"),
                                ImageDefault = new ImageSettings {
                                    Width = 60,
                                    Height = 60,
                                    Crop = 5
                                }
                            })
                        }
                    </td>
                    <td>
                        <div>@orderline.GetString("Ecom:Order:OrderLine.ProductName")</div>
                        @if (orderline.GetBoolean("Ecom:Order:OrderLine.IsProduct"))
                        {
                            <div>#@orderline.GetString("Ecom:Order:OrderLine.ProductNumber")</div>
                        }
                        <div>@orderline.GetString("Ecom:Order:OrderLine.UnitName")</div>
                        <div>@orderline.GetString("Ecom:Order:OrderLine.ProductVariantText")</div>
                    </td>
                    <td class="u-ta-right">
                        @if (orderline.GetBoolean("Ecom:Order:OrderLine.IsProduct"))
                        {
                            @orderline.GetString("Ecom:Order:OrderLine.Quantity")
                        }
                    </td>
                    <td class="u-ta-right">
                        @if (orderline.GetBoolean("Ecom:Order:OrderLine.IsProduct"))
                        {
                            if (pointsTotal != 0)
                            {
                                <span class="u-color--loyalty-points">@orderline.GetDouble("Ecom:Product.PointPrice")</span> @Translate("points")
                            }
                            else
                            {
                                @orderline.GetString("Ecom:Order:OrderLine.UnitPrice.PriceFormatted").Replace(" ", "&nbsp;")
                            }
                        }
                    </td>
                    <td class="u-ta-right">
                        @if (pointsTotal != 0)
                        {
                            <span class="u-color--loyalty-points">@pointsTotal</span> @Translate("points")
                        }
                        else
                        {
                            @orderline.GetString("Ecom:Order:OrderLine.Price.PriceFormatted").Replace(" ", "&nbsp;")
                        }
                    </td>
                </tr>

                foreach (LoopItem bomitem in orderline.GetLoop("BOMItems"))
                {
                    <tr class="active u-color-light-gray--bg">
                        <td width="60">
                            @Render(new Image {
                                Path = GetProductImage(bomitem),
                                Title = bomitem.GetString("Ecom:Order:OrderLine.ProductName.Short"),
                                ImageDefault = new ImageSettings {
                                    Width = 60,
                                    Height = 60,
                                    Crop = 5
                                }
                            })
                        </td>
                        <td>@bomitem.GetString("Ecom:Order:OrderLine.ProductName.Short")</td>
                        <td class="u-ta-right">
                            @if (bomitem.GetBoolean("Ecom:Order:OrderLine.IsProduct"))
                            {
                                @bomitem.GetString("Ecom:Order:OrderLine.Quantity")
                            }
                        </td>
                        <td class="u-ta-right">
                            @if (bomitem.GetBoolean("Ecom:Order:OrderLine.IsProduct"))
                            {
                                @bomitem.GetString("Ecom:Order:OrderLine.UnitPrice.PriceFormatted").Replace(" ", "&nbsp;")
                            }
                        </td>
                        <td class="u-ta-right">@bomitem.GetString("Ecom:Order:OrderLine.Price.PriceFormatted").Replace(" ", "&nbsp;")</td>
                    </tr>
                }
            }

            @if (isSalesTaxWebsite)
            {
                var subtotal = Services.Currencies.Format(Context.Currency, (GetDouble("Ecom:Order.PriceWithoutFees.PriceWithoutVAT") - GetDouble("Ecom:Order.Taxes.Total.PriceWithoutVAT")), true);
                <tr>
                    <td colspan="4" class="u-ta-right u-bold">@Translate("Subtotal")</td>
                    <td class="u-ta-right u-bold">@subtotal.Replace(" ", "&nbsp;")</td>
                </tr>
            }
            else
            {
                <tr>
                    <td colspan="4" class="u-ta-right u-bold">@Translate("Subtotal")</td>
                    <td class="u-ta-right u-bold">@GetString("Ecom:Order.OrderLines.Total.PriceWithoutVAT").Replace(" ", "&nbsp;")</td>
                </tr>
            }

            @if (isSalesTaxWebsite)
            {
                <tr>
                    <td colspan="4" class="u-ta-right">@Translate("Taxes")</td>
                    <td class="u-ta-right">@GetString("Ecom:Order.Taxes.Total").Replace(" ", "&nbsp;")</td>
                </tr>
            }
            else
            {
                <tr>
                    <td colspan="4" class="u-ta-right">@Translate("VAT") @GetString("Ecom:Order.Price.VATPercentFormatted")</td>
                    <td class="u-ta-right">@GetString("Ecom:Order.Price.VATFormatted").Replace(" ", "&nbsp;")</td>
                </tr>
            }

            @if (!string.IsNullOrWhiteSpace(GetString("Ecom:Order.PaymentMethod")))
            {
                <tr>
                    <td colspan="4" class="u-ta-right">
                        @Translate("Payment method")
                        (@GetString("Ecom:Order.PaymentMethod"))
                    </td>
                    <td class="u-ta-right">@GetString("Ecom:Order.PaymentFee.PriceFormatted").Replace(" ", "&nbsp;")</td>
                </tr>
            }

            @if (!string.IsNullOrWhiteSpace(GetString("Ecom:Order.ShippingMethod")))
            {
                <tr>
                    <td colspan="4" class="u-ta-right">
                        @Translate("Shipping method")
                        (@GetString("Ecom:Order.ShippingMethod"))
                    </td>
                    <td class="u-ta-right">@GetString("Ecom:Order.ShippingFee.PriceFormatted").Replace(" ", "&nbsp;")</td>
                </tr>
            }

            @if (GetDouble("Ecom:Order.RewardTotalPoints") > 0)
            {
                <tr>
                    <td colspan="4" class="u-ta-right">
                        @Translate("Earnings")
                    </td>
                    <td class="u-ta-right">
                        <span class="u-color--loyalty-points">@GetDouble("Ecom:Order.RewardTotalPoints")</span> @Translate("points")
                    </td>
                </tr>
            }

            <tr class="u-color-light-gray--bg">
                <th colspan="4" class="u-ta-right">@Translate("Total with VAT")</th>
                <th class="u-ta-right">@GetString("Ecom:Order.Price.PriceWithVATFormatted").Replace(" ", "&nbsp;")</th>
            </tr>
        </tbody>
    </table>
}