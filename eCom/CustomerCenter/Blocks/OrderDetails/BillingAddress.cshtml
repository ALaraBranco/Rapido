@inherits Dynamicweb.Rendering.RazorTemplateBase<Dynamicweb.Rendering.RazorTemplateModel<Dynamicweb.Rendering.Template>>

@using Dynamicweb.Rapido.Blocks;
@using Dynamicweb.Rapido.Blocks.Components.General;
@using Dynamicweb.Rapido.Blocks.Components;

@functions {
    BlocksPage billingAddressPage = BlocksPage.GetBlockPage("Details");

    public string GetBillingAddressColumnWidth() {

        string businessAddress = Pageview.AreaSettings.GetItem("Settings").GetItem("Address") != null ? Pageview.AreaSettings.GetItem("Settings").GetItem("Address").GetString("StreetAddress") : "";
        bool showDelivery = !string.IsNullOrWhiteSpace(GetString("Ecom:Order.Delivery.Address"));
        bool showShop = Pageview.AreaSettings.GetItem("Settings").GetItem("Address") != null && !string.IsNullOrWhiteSpace(businessAddress);
        string columnWidth = (showDelivery || showShop) ? "4" : "6";
        columnWidth = Pageview.Device.ToString() == "Mobile" ? "12" : columnWidth;

        return columnWidth;
    }
}

@{

    Block billingAddress = new Block
    {
        Id = "BillingAddress",
        SortId = 10,
        Design = new Design
        {
            RenderType = RenderType.Column,
            Size = GetBillingAddressColumnWidth(),
            CssClass = "pdf-column"
        },
        BlocksList = new List<Block> {
            new Block {
                Id = "BillingAddressTitle",
                SortId = 10,
                Component = new Heading {
                    Title = Translate("Billing address"),
                    Level = 3, Icon = new Icon { Prefix = "fas", Name = "fa-home" },
                    CssClass = "u-no-margin"
                }
            },
            new Block {
                Id = "BillingAddressContent",
                SortId = 20,
                Design = new Design {
                    CssClass = "grid__cell"
                },
                Template = RenderBillingAddress()
            }
        }
    };

    billingAddressPage.Add("FooterContent", billingAddress);
}


@helper RenderBillingAddress()
{

    <div>@GetString("Ecom:Order.Customer.Company")</div>
    <div>@GetString("Ecom:Order.Customer.Name")</div>
    <div>@GetString("Ecom:Order.Customer.Address")</div>
    <div>@GetString("Ecom:Order.Customer.Address2")</div>
    <div>@GetString("Ecom:Order.Customer.Zip") @GetString("Ecom:Order.Customer.City"), @GetString("Ecom:Order.Customer.Country")</div>

    if (!string.IsNullOrWhiteSpace(GetString("Ecom:Order.Customer.Email")))
    {
        <div>@Translate("Email"): @GetString("Ecom:Order.Customer.Email")</div>
    }

    if (!string.IsNullOrWhiteSpace(GetString("Ecom:Order.Customer.Phone")))
    {
        <div>@Translate("Phone"): @GetString("Ecom:Order.Customer.Phone")</div>
    }
}