@using Dynamicweb.Rapido.Blocks.Components.Ecommerce
@using Dynamicweb.Rapido.Blocks.Components.General

@helper RenderBuyActions(string view)
{
    var viewSettings = Pageview.AreaSettings.GetItem("ProductList").GetItem(view);
    var listViewSettings = Pageview.AreaSettings.GetItem("ProductList").GetItem("ListView");
    var gridViewSettings = Pageview.AreaSettings.GetItem("ProductList").GetItem("GridView");
    var ecommerceSettings = Pageview.AreaSettings.GetItem("Ecommerce");

    bool onlyPreview = ecommerceSettings.GetBoolean("OnlyPreviewForAnonymous") && Pageview.User == null;
    onlyPreview = Dynamicweb.Rapido.Services.User.IsUserAnonymous() ? true : onlyPreview;
    bool pointShopOnly = ecommerceSettings.GetBoolean("PointShopOnly");
    bool showCartButton = viewSettings.GetBoolean("ShowAddToCartButton");
    bool showViewButton = viewSettings.GetBoolean("ShowViewButton");
    string viewMoreText = viewSettings.GetString("ViewMoreText");
    viewMoreText = !string.IsNullOrEmpty(viewMoreText) ? viewMoreText : "View";
    
    bool hideUnitSelector = view == "GridView";
    bool hasVariantSelector = view == "ListView" && listViewSettings.GetList("Variants") != null && listViewSettings.GetList("Variants").SelectedValue != "none";
    string wrapperClass = view == "GridView" ? "buttons-collection--center" : "";
    
    int columnsCount = gridViewSettings.GetList("Columns") != null ? Converter.ToInt32(gridViewSettings.GetList("Columns").SelectedValue) : 4;
    bool hideButtonText = view == "DetailsView" || (view == "GridView" && (columnsCount >= 4 || Pageview.Device.ToString() == "Mobile" || Pageview.Device.ToString() == "Tablet"));
    if (view == "GridView" && pointShopOnly && columnsCount <= 4) 
    {
        hideButtonText = false;
    }

    var viewBtn = new Link
    {
        Href = "{{link}}",
        Id = "CartButton_{{id}}",
        Title = Translate(viewMoreText),
        OnClick = "Scroll.SavePosition(event); {{googleImpressionClick}}",
        ButtonLayout = ButtonLayout.Secondary,
        CssClass = "u-no-margin"
    };

    if (!onlyPreview)
    {
        var addToCartBtn = new AddToCart
        {
            ProductId = "{{productId}}",
            VariantId = "{{variantid}}",
            UnitId = "{{unitId}}",
            ProductInfo = "{{productInfo}}",
            BuyForPoints = pointShopOnly,
            WrapperCssClass = wrapperClass,
            AddButton = new AddToCartButton
            {
                HideTitle = hideButtonText,
                OnClick = "{{facebookPixelAction}}",
                ExtraAttributes = new Dictionary<string, string>
                {
                    { "{{disabledBuyButton}}", "" }
                }
            }
        };

        if (!pointShopOnly) 
        {
            addToCartBtn.QuantitySelector = new QuantitySelector
            {
                Id = "Quantity{{id}}"
            };
        }

        if (!hideUnitSelector)
        {
            addToCartBtn.UnitSelector = new UnitSelector
            {
                OptionsContent = "{{#unitOptions}}{{>UnitOption}}{{/unitOptions}}",
                Id = "UnitOptions_{{id}}",
                SelectedOption = "{{unitName}}",
                CssClass = "{{hasUnits}}"
            };
        }

        if (showCartButton)
        {
            if (!showViewButton || hasVariantSelector)
            {
                @Render(addToCartBtn)
            }
            else
            {
                <text>{{#if hideAddToCartButton}}</text>
                    <div>@Render(viewBtn)</div>
                <text>{{else}}</text>
                    @Render(addToCartBtn)
                <text>{{/if}}</text>
            }
        }
        else if (showViewButton)
        {
            <div>@Render(viewBtn)</div>
        }
    }
    else if (showViewButton)
    {
        <div>@Render(viewBtn)</div>
    }
}