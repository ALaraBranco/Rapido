@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.PageViewModel>
@using Dynamicweb.Rapido.Blocks
@using System.Collections.Generic
@Include("ImpersonationBar.cshtml")
@Include("RizzoMiniCart.cshtml")
@{ 
    var rizzoReferencesBlocksPage = BlocksPage.GetBlockPage("Master");

    var rizzoMasterScriptReferences = new Block()
    {
        Id = "RizzoMasterScriptReferences",
        SortId = 2,
        Template = RenderRizzoMasterScriptReferences()
    };
    rizzoReferencesBlocksPage.Add(MasterBlockId.MasterReferences, rizzoMasterScriptReferences);
    
    var rizzoMasterStylesReferences = new Block()
    {
        Id = "RizzoMasterStylesReferences",
        SortId = 22,
        Template = RenderRizzoMasterStylesReferences()
    };
    rizzoReferencesBlocksPage.Add("Head", rizzoMasterStylesReferences);
}

@helper RenderRizzoMasterScriptReferences() {
    if (Model.Area.Item.GetItem("Rizzo").GetBoolean("UseRizzoJavascript"))
    {
        const string folderName = "rizzo";
        var minify = Model.Area.Item.GetItem("Rizzo").GetBoolean("MinifyJavascript");
        var bundle = Dna.Optimizer.Renderer.RenderScripts($"/Files/Templates/Designs/Rapido/js/{folderName}", $"-{folderName}-scripts", new List<string>(),  new List<string>(), minify, false, false);
        <script src="@bundle"></script>
        PushPromise(bundle);
    }
}

@helper RenderRizzoMasterStylesReferences() {
    if (Model.Area.Item.GetItem("Rizzo").GetBoolean("UseRizzoCss"))
    {
        const string folderName = "rizzo";
        var minify = Model.Area.Item.GetItem("Rizzo").GetBoolean("MinifyCss");
        var variablesFile = "/Files/Templates/Designs/Rapido/css/rapido/_variables_" + Model.Area.ID + ".auto.less";
        var bundle = Dna.Optimizer.Renderer.RenderStyles($"/Files/Templates/Designs/Rapido/css/{folderName}", $"-{folderName}-styles", new [] {variablesFile},  new[] { $"{folderName}.css", $"{folderName}.min.css" }, minify, false, false);
        <link id="rizzoCss" type="text/css" rel="stylesheet" href="@bundle" />
        PushPromise(bundle);
    }
}