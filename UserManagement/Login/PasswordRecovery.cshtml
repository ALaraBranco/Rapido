@inherits Dynamicweb.Rendering.RazorTemplateBase<Dynamicweb.Rendering.RazorTemplateModel<Dynamicweb.Rendering.Template>>
@using Dynamicweb.Rapido.Blocks.Components.General
@using Dynamicweb.Rapido.Blocks.Components
@using Dynamicweb.Rapido.Blocks
@using System.IO


@functions {
    BlocksPage passwordRecoveryPage = BlocksPage.GetBlockPage("PasswordRecovery");
    string pageId;

    Form GetPasswordRecoveryForm()
    {
        Form form = new Form { Action = "/Default.aspx?ID=" + pageId, Method = FormMethod.Post };

        form.Add(new HiddenField { Name = "ForgotPasswordMailTemplate", Value = GetString("UserManagement:User.Login.EmailTemplate") });
        form.Add(new HiddenField { Name = "ForgotPasswordSenderEmail", Value = GetString("UserManagement:User.Login.EmailSender") });
        form.Add(new HiddenField { Name = "ForgotPasswordMailSubject", Value = GetString("UserManagement:User.Login.EmailSubject") });
        form.Add(new HiddenField { Name = "LoginAction", Value = "Recovery" });
        form.Add(new NotificationMessage
        {
            MessageType = NotificationMessageType.Info,
            CssClass = "u-margin-bottom",
            Message = Translate("Insert your email below and you will receive an email where you can recover your password.")
        });

        foreach (LoopItem loginField in GetLoop("UserManagement:User.Login.Fields"))
        {
            form.Add(new TextField
            {
                Id = loginField.GetString("Field.Name"),
                Name = loginField.GetString("Field.Name"),
                Label = loginField.GetString("Field.Title"),
                Placeholder = loginField.GetString("Field.Title"),
                ErrorMessage = loginField.GetString("Field.Error"),
                Required = true
            });
        }

        if (!string.IsNullOrWhiteSpace(GetString("UserManagement:User.Login.FoundUsersCount")))
        {
            if (GetInteger("UserManagement:User.Login.FoundUsersCount") == 0 || GetInteger("UserManagement:User.Login.FoundUsersCount") > 1)
            {
                form.Add(new NotificationMessage
                {
                    MessageType = NotificationMessageType.Error,
                    CssClass = "u-margin-bottom--lg",
                    Message = Translate("User not found")
                });
            }
        }

        form.Add(new Button { ButtonType = ButtonType.Submit, Title = Translate("Send password recovery"), OnClick = "Buttons.LockButton(event)" });

        return form;
    }

    Form GetNewPasswordForm()
    {
        Form form = new Form { Action = "/Default.aspx?ID=" + pageId, Method = FormMethod.Post };

        form.Add(new Text { Content = Translate("Choose a new password") + "." });

        form.Add(new NotificationMessage
        {
            MessageType = NotificationMessageType.Warning,
            CssClass = "u-margin-bottom--lg",
            Message = Translate("Notice!") + " " + Translate("A strong password is a combination of letters and punctuation marks")
        });

        form.Add(new HiddenField { Name = "RecoveryToken", Value = GetString("UserManagement:User.Login.RecoveryToken") });
        form.Add(new HiddenField { Name = "ForgotPasswordMailTemplate", Value = GetString("UserManagement:User.Login.EmailTemplate") });
        form.Add(new HiddenField { Name = "ForgotPasswordSenderEmail", Value = GetString("UserManagement:User.Login.EmailSender") });
        form.Add(new HiddenField { Name = "ForgotPasswordMailSubject", Value = GetString("UserManagement:User.Login.EmailSubject") });
        form.Add(new HiddenField { Name = "LoginAction", Value = "ChangePassword" });

        form.Add(new TextField
        {
            Id = GetString("UserManagement:User.Login.Field.NewPassword.Name"),
            Name = GetString("UserManagement:User.Login.Field.NewPassword.Name"),
            Type = TextFieldType.Password,
            Label = Translate("New password"),
            ErrorMessage = GetString("UserManagement:User.Login.Field.NewPassword.Error"),
            Required = true
        });

        form.Add(new TextField
        {
            Id = GetString("UserManagement:User.Login.Field.NewPasswordConfirm.Name"),
            Name = GetString("UserManagement:User.Login.Field.NewPasswordConfirm.Name"),
            Type = TextFieldType.Password,
            Label = Translate("Confirm password"),
            ErrorMessage = GetString("UserManagement:User.Login.Field.NewPasswordConfirm.Error"),
            Required = true
        });

        form.Add(new Button { ButtonType = ButtonType.Submit, Title = Translate("Submit") });

        return form;
    }
}

@{
    pageId = GetGlobalValue("Global:Page.ID");
    passwordRecoveryPage.Add(
        new Block
        {
            Id = "PasswordRecoveryHeader",
            SortId = 10,
            Component = new Heading
            {
                Title = Translate("Reset your password"),
                Level = 2
            }
        }
    );

    Block main = new Block
    {
        Id = "PasswordRecoveryMain",
        SortId = 20
    };

    if (GetString("UserManagement:User.Login.Action") == "Recovery")
    {
        main.Component = GetPasswordRecoveryForm();
    }

    if (GetString("UserManagement:User.Login.Action") == "RecoveryLinkSent")
    {
        main.Component = new Text { Content = Translate("Check your email - we sent you an email with a link. Click it to continue to reset your password.") };
    }

    if (GetString("UserManagement:User.Login.Action") == "PasswordSent")
    {
        main.Component = new Text { Content = Translate("Check your email - we sent you an email with the password.") };
    }

    if (GetString("UserManagement:User.Login.Action") == "NewPasswordForm")
    {
        if (GetBoolean("UserManagement:User.Login.RecoveryToken.FoundUser"))
        {
            if (GetBoolean("UserManagement:User.Login.RecoveryToken.OutOfDate"))
            {
                main.Component = new NotificationMessage
                {
                    MessageType = NotificationMessageType.Error,
                    CssClass = "u-margin-bottom--lg",
                    Message = Translate("The recovery password link out of date.") + " " +
                              Translate("Try recover password") +
                              Render(new Link { Href = "/Default.aspx?ID=" + pageId, Title = Translate("again"), ButtonLayout = ButtonLayout.None }) + "."
                };
            }
            else
            {
                main.Component = GetNewPasswordForm();
            }
        }
        else
        {
            main.Component = new NotificationMessage
            {
                MessageType = NotificationMessageType.Error,
                CssClass = "u-margin-bottom--lg",
                Message = Translate("Something went wrong.") + " " +
                Translate("Try recover password") +
                Render(new Link { Href = "/Default.aspx?ID=" + pageId, Title = Translate("again"), ButtonLayout = ButtonLayout.None }) + "."
            };
        }
    }

    if (GetString("UserManagement:User.Login.Action") == "PasswordChanged")
    {
        main.Component = new Text { Content = Translate("Password changed") + "." };
    }

    passwordRecoveryPage.Add(main);
}

@Include("../../Components/GridBuilder.cshtml")
@Include("../../Components/GeneralComponents.cshtml")

@Include("Blocks/Custom__Blocks.cshtml")


@RenderBlockList(passwordRecoveryPage.BlocksRoot.BlocksList)

